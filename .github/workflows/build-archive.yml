name: buid-archive
run-name: ${{ github.actor }} - ${{ github.event_name }}
on: 
    push:
      
       branches: 
        - main 
        - dev
        - ci/github
jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      CXX: clang++-19
      CC: clang-19
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}/triplets
      VCPKG_DEFAULT_TRIPLET: x64-linux-clang-libcxx
    steps:
      - uses: actions/checkout@v4
      - name: Install apt dependencies with caching
        uses: rishabhc32/apt-package-cache@v1.0.1
        with:
          packages: git libc++-dev libc++abi-dev ninja-build clang-19 cmake
      - name: use vcpkg to install dependencies
        uses: lukka/run-vcpkg@v7.6
        with:
          vcpkgArguments: gtest nlohmann-json --overlay-triplets=${{ env.VCPKG_OVERLAY_TRIPLETS }} 
          vcpkgDirectory: ${{ env.VCPKG_ROOT }}
          vcpkgTriplet: ${{ env.VCPKG_DEFAULT_TRIPLET }}
          vcpkgGitCommitId: 0cb95c860ea83aafc1b24350510b30dec535989a
      - name: Cache re2c executable
        id: cache-re2c
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/re2c/re2c
          key: re2c-${{ runner.os }}-${{ hashFiles('**/re2c') }}
          restore-keys: |
            re2c-${{ runner.os }}-
      - name: build re2c
        if: steps.cache-re2c.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y autoconf make
          git clone https://github.com/skvadrik/re2c.git  $(pwd)/re2c
          cd re2c
          autoreconf -i -W all
          ./configure  --disable-rust --disable-python  --disable-ocaml  --disable-js  --disable-java --disable-haskelle --disable-golang  --disable-dlang  --disable-swift  --disable-vlang --disable-zig  --disable-haskell
          make -j$(nproc)
      - name: install re2c
        run: |
          cd $(pwd)/re2c
          sudo install re2c /usr/bin/
      - name: build-debug
        run: |
          cmake -B build/debug -S . -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=$(pwd)/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_OVERLAY_TRIPLETS=$(pwd)/triplets \
          -DVCPKG_TARGET_TRIPLET=x64-linux-clang-libcxx \
          -DCMAKE_CXX_COMPILER=clang++-19 -DCMAKE_C_COMPILER=clang-19 \
          -DCMAKE_BUILD_TYPE=Debug
          cmake --build build/debug
      - name: build-release
        run: |
          cmake -B build/release -S . -G Ninja \
          -DCMAKE_TOOLCHAIN_FILE=$(pwd)/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DVCPKG_OVERLAY_TRIPLETS=$(pwd)/triplets \
          -DVCPKG_TARGET_TRIPLET=x64-linux-clang-libcxx \
          -DCMAKE_CXX_COMPILER=clang++-19 -DCMAKE_C_COMPILER=clang-19 \
          -DCMAKE_BUILD_TYPE=Release
          cmake --build build/release
      - name: get branch name
        id: get-branch-name
        run: |
          branch_name=$(echo ${GITHUB_REF#refs/heads/})
          branch_name=$(echo $branch_name|sed 's|/|-|g')
          echo "::set-output name=branch::$branch_name"
      - name: Upload compressed debug archive
        uses: actions/upload-artifact@v4
        with:
          name: xcdoc-${{ steps.get-branch-name.outputs.branch }}-linux-debug-build  # 使用 github.ref_name
          path: build/debug
          retention-days: 7
      - name: Upload compressed release archive
        uses: actions/upload-artifact@v4
        with:
          name: xcdoc-${{ steps.get-branch-name.outputs.branch }}-linux-release-build  # 使用 github.ref_name
          path: build/release
          retention-days: 7
  build-windows:
    runs-on: windows-latest
    env:
      LLVMInstallDir: ${{ github.workspace }}\llvm
      LLVMToolsVersion: 20.1.8
      VCPKG_ROOT: ${{ github.workspace }}\vcpkg
      EXTRA_PATH: ;${{ github.workspace }}\llvm\bin;${{ github.workspace }}\ninja;${{ github.workspace }}\re2c\.build;
      CXX: ${{ github.workspace }}\llvm\bin\clang-cl.exe
      CC: ${{ github.workspace }}\llvm\bin\clang-cl.exe
      VCPKG_OVERLAY_TRIPLETS: ${{ github.workspace }}\my-triplets
      VCPKG_DEFAULT_TRIPLET: x64-win-llvm
      RE2C_HOME: ${{ github.workspace }}\re2c\.build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Add to PATH
        shell: pwsh
        run: |
          echo '${{ env.EXTRA_PATH }}' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Cache llvm
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: ${{ env.LLVMInstallDir }}
          key: ${{ runner.os }}-llvm-
      - name: Cache ninja
        id: cache-ninja
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}\ninja
          key: ${{ runner.os }}-ninja-      
      - name: install 7zip
        if: steps.cache-llvm.outputs.cache-hit != 'true' ||
            steps.cache-ninja.outputs.cache-hit != 'true'
        run: choco install 7zip -y
      - name: install ninja
        if: steps.cache-ninja.outputs.cache-hit != 'true'
        run: |
          $url = "https://github.com/ninja-build/ninja/releases/download/v1.13.1/ninja-win.zip"
          Invoke-WebRequest -Uri $url -OutFile "ninja.zip"
          7z x ninja.zip -o"${{ github.workspace }}\ninja"
      - name: install llvm
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          $url = "https://github.com/llvm/llvm-project/releases/download/llvmorg-20.1.8/clang+llvm-20.1.8-x86_64-pc-windows-msvc.tar.xz"
          Invoke-WebRequest -Uri $url -OutFile "llvm.tar.xz"
          7z x llvm.tar.xz
          7z x llvm.tar
          Move-Item -Path "clang+llvm-20.1.8-x86_64-pc-windows-msvc" -Destination "${{ env.LLVMInstallDir }}"
      - name: clone triplets repo
        run: |
          git clone https://github.com/Neumann-A/my-vcpkg-triplets.git ${{ env.VCPKG_OVERLAY_TRIPLETS }}
      - name: use vcpkg to install dependencies
        uses: lukka/run-vcpkg@v7.6
        with:
          vcpkgArguments: gtest nlohmann-json --overlay-triplets=${{ env.VCPKG_OVERLAY_TRIPLETS }} 
          vcpkgDirectory: ${{ env.VCPKG_ROOT }}
          vcpkgTriplet: ${{ env.VCPKG_DEFAULT_TRIPLET }}
          vcpkgGitCommitId: 0cb95c860ea83aafc1b24350510b30dec535989a
      - name: Cache re2c executable
        id: cache-re2c
        uses: actions/cache@v4
        with:
          path: ${{ env.RE2C_HOME }}\re2c.exe
          key: re2c-${{ runner.os }}-${{ hashFiles('**/re2c') }}
          restore-keys: |
            re2c-${{ runner.os }}-
      - name: build re2c
        if: steps.cache-re2c.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/skvadrik/re2c.git  ${{ github.workspace }}\re2c
          cd re2c
          cmake -B ${{ env.RE2C_HOME }} -S . -G Ninja
          cmake --build ${{ env.RE2C_HOME }}
      - name: build-debug
        run: |
          cmake -B build\debug -S . -G Ninja `
          -DCMAKE_TOOLCHAIN_FILE=“${{ env.VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake“ `
          -DVCPKG_OVERLAY_TRIPLETS=${{ env.VCPKG_OVERLAY_TRIPLETS }} `
          -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_DEFAULT_TRIPLET }} `
          -DCMAKE_CXX_COMPILER=${{ env.CXX }} `
          -DCMAKE_C_COMPILER=${{ env.CC }} `
          -DCMAKE_BUILD_TYPE=Debug
          cmake --build build\debug
      - name: build-release
        run: |
          cmake -B build\release -S . -G Ninja `
          -DCMAKE_TOOLCHAIN_FILE=“${{ env.VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake“ `
          -DVCPKG_OVERLAY_TRIPLETS=${{ env.VCPKG_OVERLAY_TRIPLETS }} `
          -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_DEFAULT_TRIPLET }} `
          -DCMAKE_CXX_COMPILER=${{ env.CXX }} `
          -DCMAKE_C_COMPILER=${{ env.CC }} `
          -DCMAKE_BUILD_TYPE=Release
          cmake --build build\release
      - name: get branch name
        id: get-branch-name
        run: |
          $branch_name = "ci/github"
          $branch_name = $branch_name -replace "/", "-"
          echo "::set-output name=branch::$branch_name"
      - name: Upload compressed debug archive
        uses: actions/upload-artifact@v4
        with:
          name: xcdoc-${{ steps.get-branch-name.outputs.branch }}-windows-debug-build  # 使用 github.ref_name
          path: build\debug
          retention-days: 7
      - name: Upload compressed release archive
        uses: actions/upload-artifact@v4
        with:
          name: xcdoc-${{ steps.get-branch-name.outputs.branch }}-windows-release-build  # 使用 github.ref_name
          path: build\release
          retention-days: 7